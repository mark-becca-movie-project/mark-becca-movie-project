{"ast":null,"code":"var _jsxFileName = \"/Users/mark/IdeaProjects/mark-becca-movie-project/netflix-optimized/src/Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(_ref) {\n  _s();\n\n  let {\n    title\n  } = _ref;\n  const [movies, setMovies] = useState([]); //starts as empty movie array\n  //so now we need a snippet of code which runs based on a specific condition or variable\n  // a really handy hook from react is called useEffect\n  // useEffect(() => {\n  //                            //when row loads on page load, this code runs\n  //                    async function fetchData() {\n  //                        const request = await axios.get(fetchUrl);\n  //                        // setMovies(request.data.results);\n  //                        console.log(request);\n  //                        return request;\n  //                    }\n  //                    fetchData();\n  // }, []);          /* if we leave brackets blank, run once when the row loads,  and don't run it again*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n\n_c = Row;\nexport default Row;\n/*\nNotes:  //use state to keep track of the movies - mark\n    //state can be considered, short term memory\n    //state is a way to write variables in react\n    //hooks is a way to make your life easier, give an initial value inside the brackets\n    //syntatic sugar = {title}\n    to use async write an internal function then call it\n\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/mark/IdeaProjects/mark-becca-movie-project/netflix-optimized/src/Row.js"],"names":["React","useState","useEffect","axios","Row","title","movies","setMovies"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,OAAsB;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CADkB,CACwB;AAE1C;AACM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKI,sBACI;AAAA,2BACI;AAAA,gBAAKI;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA5BQD,G;;KAAAA,G;AA8BT,eAAeA,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport axios from \"./axios\";\n\nfunction Row({title}) {\n    const [movies, setMovies] = useState([]); //starts as empty movie array\n\n    //so now we need a snippet of code which runs based on a specific condition or variable\n          // a really handy hook from react is called useEffect\n// useEffect(() => {\n//                            //when row loads on page load, this code runs\n//                    async function fetchData() {\n//                        const request = await axios.get(fetchUrl);\n//                        // setMovies(request.data.results);\n//                        console.log(request);\n//                        return request;\n//                    }\n//                    fetchData();\n// }, []);          /* if we leave brackets blank, run once when the row loads,  and don't run it again*/\n    \n\n\n\n    return (\n        <div>\n            <h2>{title}</h2>\n\n\n            {/*{container with posters inside}*/}\n\n        </div>\n    )\n}\n\nexport default Row\n\n/*\nNotes:  //use state to keep track of the movies - mark\n    //state can be considered, short term memory\n    //state is a way to write variables in react\n    //hooks is a way to make your life easier, give an initial value inside the brackets\n    //syntatic sugar = {title}\n    to use async write an internal function then call it\n\n */"]},"metadata":{},"sourceType":"module"}